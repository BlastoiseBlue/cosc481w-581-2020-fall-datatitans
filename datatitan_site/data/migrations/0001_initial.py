# Generated by Django 3.1.2 on 2020-10-24 17:39

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "iso_code",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=55)),
                ("continent", models.CharField(max_length=15)),
                ("population", models.IntegerField()),
            ],
            options={"managed": False,},
        ),
        migrations.CreateModel(
            name="CovidDataClean",
            fields=[
                ("iso_code", models.CharField(max_length=8, unique_for_date="date")),
                ("continent", models.CharField(max_length=15, unique_for_date="date")),
                ("location", models.CharField(max_length=55, unique_for_date="date")),
                ("date", models.DateField()),
                ("total_cases", models.IntegerField()),
                ("new_cases", models.IntegerField(default=0)),
                ("new_cases_smoothed", models.FloatField()),
                ("total_deaths", models.IntegerField()),
                ("new_deaths", models.IntegerField(default=0)),
                ("new_deaths_smoothed", models.FloatField()),
                ("total_cases_per_million", models.FloatField()),
                ("new_cases_per_million", models.FloatField()),
                ("new_cases_smoothed_per_million", models.FloatField()),
                ("total_deaths_per_million", models.FloatField()),
                ("new_deaths_per_million", models.FloatField()),
                ("new_deaths_smoothed_per_million", models.FloatField()),
                ("new_tests", models.IntegerField(default=0)),
                ("total_tests", models.IntegerField()),
                ("total_tests_per_thousand", models.FloatField()),
                ("new_tests_per_thousand", models.FloatField()),
                ("population", models.IntegerField()),
                (
                    "data_key",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
            ],
            options={"ordering": ["iso_code", "date"], "managed": False,},
        ),
        migrations.CreateModel(
            name="CovidDataMonthly",
            fields=[
                ("iso_code", models.CharField(max_length=8, unique_for_month="month")),
                (
                    "continent",
                    models.CharField(max_length=15, unique_for_month="month"),
                ),
                ("location", models.CharField(max_length=55, unique_for_month="month")),
                ("month", models.DateField()),
                ("new_cases", models.IntegerField()),
                ("new_deaths", models.IntegerField()),
                ("new_tests", models.IntegerField()),
                (
                    "data_key",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
            ],
            options={"ordering": ["iso_code", "month"], "managed": False,},
        ),
        migrations.CreateModel(
            name="CovidDataRaw",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "iso_code",
                    models.CharField(max_length=8, null=True, unique_for_date="date"),
                ),
                (
                    "continent",
                    models.CharField(max_length=15, null=True, unique_for_date="date"),
                ),
                (
                    "location",
                    models.CharField(max_length=55, null=True, unique_for_date="date"),
                ),
                ("date", models.DateField()),
                ("total_cases", models.IntegerField(null=True)),
                ("new_cases", models.IntegerField(default=0, null=True)),
                ("new_cases_smoothed", models.FloatField(null=True)),
                ("total_deaths", models.IntegerField(null=True)),
                ("new_deaths", models.IntegerField(default=0, null=True)),
                ("new_deaths_smoothed", models.FloatField(null=True)),
                ("total_cases_per_million", models.FloatField(null=True)),
                ("new_cases_per_million", models.FloatField(null=True)),
                ("new_cases_smoothed_per_million", models.FloatField(null=True)),
                ("total_deaths_per_million", models.FloatField(null=True)),
                ("new_deaths_per_million", models.FloatField(null=True)),
                ("new_deaths_smoothed_per_million", models.FloatField(null=True)),
                ("new_tests", models.IntegerField(default=0, null=True)),
                ("total_tests", models.IntegerField(null=True)),
                ("total_tests_per_thousand", models.FloatField(null=True)),
                ("new_tests_per_thousand", models.FloatField(null=True)),
                ("new_tests_smoothed", models.FloatField(null=True)),
                ("new_tests_smoothed_per_thousand", models.FloatField(null=True)),
                ("tests_per_case", models.FloatField(null=True)),
                ("positive_rate", models.FloatField(null=True)),
                ("tests_units", models.TextField(null=True)),
                (
                    "stringency_index",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("population", models.PositiveBigIntegerField(null=True)),
                (
                    "population_density",
                    models.DecimalField(decimal_places=3, max_digits=8, null=True),
                ),
                (
                    "median_age",
                    models.DecimalField(decimal_places=1, max_digits=4, null=True),
                ),
                (
                    "aged_65_older",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "aged_70_older",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "gdp_per_capita",
                    models.DecimalField(decimal_places=3, max_digits=9, null=True),
                ),
                (
                    "extreme_poverty",
                    models.DecimalField(decimal_places=1, max_digits=4, null=True),
                ),
                (
                    "cardiovasc_death_rate",
                    models.DecimalField(decimal_places=3, max_digits=7, null=True),
                ),
                (
                    "diabetes_prevalence",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "female_smokers",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "male_smokers",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "handwashing_facilities",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "hospital_beds_per_thousand",
                    models.DecimalField(decimal_places=3, max_digits=6, null=True),
                ),
                (
                    "life_expectancy",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "human_development_index",
                    models.DecimalField(decimal_places=3, max_digits=4, null=True),
                ),
            ],
            options={"ordering": ["iso_code", "date"], "managed": False,},
        ),
        migrations.CreateModel(
            name="Months",
            fields=[("month", models.DateField(primary_key=True, serialize=False)),],
            options={"ordering": ["month"], "managed": False,},
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=200)),
                ("text", models.TextField()),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("published_date", models.DateTimeField(blank=True, null=True)),
            ],
        ),
    ]
