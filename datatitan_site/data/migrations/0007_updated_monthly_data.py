# Generated by Django 3.1.2 on 2020-11-03 01:55

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("data", "0006_add_icu_and_hospital_admission_columns"),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP MATERIALIZED VIEW IF EXISTS data_coviddatamonthly;
            CREATE MATERIALIZED VIEW data_coviddatamonthly AS
            SELECT
            DISTINCT ON ("data_coviddataclean"."iso_code", DATE(DATE_TRUNC('month', data_coviddataclean.date :: timestamp with time zone))) "data_coviddataclean"."iso_code",
                "data_coviddataclean"."continent",
                "data_coviddataclean"."location",
                DATE(DATE_TRUNC('month', "data_coviddataclean"."date")) AS "month",
                SUM(COALESCE("data_coviddataclean"."new_cases", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_cases",
                SUM(COALESCE("data_coviddataclean"."new_deaths", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_deaths",
                SUM(COALESCE("data_coviddataclean"."new_tests", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_tests",
                SUM(COALESCE("data_coviddataclean"."new_cases_per_million", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_cases_per_million",
                SUM(COALESCE("data_coviddataclean"."new_deaths_per_million", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_deaths_per_million",
                SUM(COALESCE("data_coviddataclean"."new_tests_per_thousand", 0)) OVER (PARTITION BY "data_coviddataclean"."iso_code", DATE_TRUNC('month', "data_coviddataclean"."date")) AS "new_tests_per_thousand",
                CONCAT(DATE(DATE_TRUNC('month'::text, data_coviddataclean.date::timestamp with time zone))) as data_key
            FROM "data_coviddataclean" ORDER BY "data_coviddataclean"."iso_code", "month";
            
            ALTER MATERIALIZED VIEW data_coviddatamonthly OWNER TO "DataTitans";
            """,
            """
            DROP MATERIALIZED VIEW IF EXISTS data_coviddatamonthly;
            CREATE MATERIALIZED VIEW data_coviddatamonthly AS
            SELECT DISTINCT data_coviddataclean.iso_code,
                            data_coviddataclean.continent,
                            data_coviddataclean.location,
                            DATE(DATE_TRUNC('month'::text, data_coviddataclean.date::timestamp with time zone))      AS month,
                            SUM(data_coviddataclean.new_cases) OVER (PARTITION BY data_coviddataclean.iso_code, (DATE(
                                    DATE_TRUNC('month'::text, data_coviddataclean.date::timestamp with time zone)))) AS new_cases,
                            SUM(data_coviddataclean.new_deaths) OVER (PARTITION BY data_coviddataclean.iso_code, (DATE(
                                    DATE_TRUNC('month'::text, data_coviddataclean.date::timestamp with time zone)))) AS new_deaths,
                            SUM(data_coviddataclean.new_tests) OVER (PARTITION BY data_coviddataclean.iso_code, (DATE(
                                    DATE_TRUNC('month'::text, data_coviddataclean.date::timestamp with time zone)))) AS new_tests,
                            CONCAT(DATE(date_trunc('month'::text, data_coviddataclean.date::timestamp with time zone))::text, data_coviddataclean.iso_code) AS data_key
            FROM data_coviddataclean
            ORDER BY data_coviddataclean.iso_code,
                     (DATE(date_trunc('month'::text, data_coviddataclean.date::timestamp with time zone)));
    
            ALTER MATERIALIZED VIEW data_coviddatamonthly OWNER TO "DataTitans";
            """
        )
    ]
